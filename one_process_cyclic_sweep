#include "stdlib.h"
#include "mpi.h"
#include "mynet.h"
#include "myprog.h"

int prog_cyclic(int n, double* a, double* b, double* c,
                      double* f, double* al, double* bt, double* gm, double* p, double* q, double* y)
{
  int i; double s;

  if (n<1) return -1;

  if (n==1) {
    if (c[0]==0.0) return -2;
    y[0] = f[0]/c[0];
  }
  else if (n==2) {
    s = c[0]*c[1]-b[0]*a[1];
    if (s==0.0) return -2;
    y[0]=(c[1]*f[0]+b[0]*f[1])/s;
    y[1]=(a[1]*f[0]+c[0]*f[1])/s;
  }
  else {
    if (c[0]==0.0) return -2;
    al[0] = b[0]/c[0];
	bt[0] = f[0]/c[0];
	gm[0] = a[0]/c[0];
    //y[0] = f[0]/c[0];
    for (i=1; i<n; i++) {
      s = c[i]-a[i]*al[i-1];
      if (s==0.0) return -2;
      al[i] = b[i]/s;
	  bt[i] = (f[i] + a[i]*bt[i-1])/s;
	  gm[i] = a[i]*gm[i-1]/s;
      //y[i] = (f[i]+a[i]*y[i-1])/s;
    }
	p[n-2] = bt[n-2];
	q[n-2] = al[n-2] + gm[n-2];
	for (i=n-3; i>=0; i--){
		p[i] = al[i]*p[i+1] + bt[i];
		q[i] = al[i]*q[i+1] + gm[i];
	}
	y[n-1] = (bt[n-1] + al[n-1]*p[0])/(1 - al[n-1]*q[0] - gm[n-1]);
    for (i=n-2; i>=0; i--)
      y[i] = p[i] + y[n-1]*q[i];
  }
  return 0;
}
